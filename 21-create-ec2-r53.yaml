- name: create ec2 and r53 records
  hosts: local
  connection: local
  vars:
    subnet_id: subnet-04998a819e3a71813 #replace subnet id
    sg_id: "sg-0236070d4d2891245"
    ami_id: "ami-09c813fb71547fc4f"
    instances:
    - mysql
    - backend
    - frontend
    zone: chanakya.blog
  tasks:
  - name: ansible to install boto3 and botocore
    ansible.builtin.pip:
      name:
        -boto
        -botocore
      executable: /usr/bin/pip3.9 
      # user: yes  # Installs packages only for the current user
  - name: create ec2 instance
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      vpc_subnet_id: "{{ subnet_id }}"
      instance_type: "t3.micro"
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
    loop: "{{ instances }}"
    register: ec2_instances

  - name: create ec2 instance
    ansible.builtin.debug:
      msg: "{{ ec2_instances }}"

  - name: create r53 records
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ item.item }}.{{ zone }}" #chanakya.bolog
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      wait: True
      overwrite: true
    loop: "{{ ec2_instances.results }}"

  - name: create r53 records for frontend
    amazon.aws.route53:
        state: present
        zone: "{{ zone }}"
        record: "{{ zone }}" #chanakya.bolog
        type: A
        ttl: 1
        value: "{{ item.instances[0].public_ip_address }}"
        wait: True
        overwrite: true

    loop: "{{ ec2_instances.results }}"
    when: ec2_instance.results.item == "frontend"

  